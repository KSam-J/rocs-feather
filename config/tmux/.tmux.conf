# TMUX Config File

# Rebind the prefix to <Space>
unbind C-b
set -g prefix C-Space

# Bind Reload tmux config to 'r'
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

bind u popup -s "fg=#333333,bg=#d9c9b6"

# Supposed to ensure that .bash_profile is run on new tmux term
set-option -g default-shell "/bin/bash"

# Enable mouse use
set -g mouse on

# Use prefix- h|v for splitting panes 
# v and h are not binded by default, but we never know in the next versions...
unbind v
unbind h
unbind % # Split vertically
unbind '"' # Split horizontally
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# Navigation ------------------------------------------------------------------
# Navigate Panes with Alt-j|h|k|l AND keep Zoom state
# bind -n M-h run-shell "tmux if -F '#{window_zoomed_flag}' 'select-pane -L ; resize-pane -Z' 'select-pane -L'"
# bind -n M-j run-shell "tmux if -F '#{window_zoomed_flag}' 'select-pane -D ; resize-pane -Z' 'select-pane -D'"
# bind -n M-k run-shell "tmux if -F '#{window_zoomed_flag}' 'select-pane -U ; resize-pane -Z' 'select-pane -U'"
# bind -n M-l run-shell "tmux if -F '#{window_zoomed_flag}' 'select-pane -R ; resize-pane -Z' 'select-pane -R'"

# Smart pane navigation without zoom check:
# If there is NO tmux pane in the direction (you're at the edge),
# and the current program is (n)vim, send the appropriate <C-w> to Neovim
# and show "Swapping nvim window ...". Otherwise, switch tmux panes.

# Left
bind -n M-h if -F '#{pane_at_left}' \
  'if-shell "ps -o comm= -t #{pane_tty} | grep -iqE \"(^|/)?g?(view|n?vim?x?)(diff)?$\"" "send-keys j k C-w h" ""' \
  'select-pane -L'

# Down
bind -n M-j if -F '#{pane_at_bottom}' \
  'if-shell "ps -o comm= -t #{pane_tty} | grep -iqE \"(^|/)?g?(view|n?vim?x?)(diff)?$\"" "send-keys j k C-w j" ""' \
  'select-pane -D'

# Up
bind -n M-k if -F '#{pane_at_top}' \
  'if-shell "ps -o comm= -t #{pane_tty} | grep -iqE \"(^|/)?g?(view|n?vim?x?)(diff)?$\"" "send-keys j k C-w k" ""' \
  'select-pane -U'

# Right
bind -n M-l if -F '#{pane_at_right}' \
  'if-shell "ps -o comm= -t #{pane_tty} | grep -iqE \"(^|/)?g?(view|n?vim?x?)(diff)?$\"" "send-keys j k C-w l" ""' \
  'select-pane -R'

bind -n M-Left  select-pane -L
bind -n M-Down  select-pane -D
bind -n M-Up    select-pane -U
bind -n M-Right select-pane -R

# end Navigation --------------------------------------------------------------

# Tmux Butler
bind-key -n M-i run-shell -b "$HOME/Repos/tmux-butler/modes/quetty-filter -start word"
bind-key -n M-p run-shell -b "$HOME/Repos/tmux-butler/modes/quetty-filter -start path"
bind-key -n M-s run-shell -b "$HOME/Repos/tmux-butler/modes/snippets"

# Get a huge history
set -g history-limit 100000

# Set vi as copy mode ... mode
set-window-option -g mode-keys vi

# Change default copy mode select and highlight to vi-inspired/ use sys-clipboard
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

# Pane Title Settings
set -g pane-border-format "#{pane_index}"

# don't rename windows automatically
set-option -g allow-rename off


######################
### DESIGN CHANGES ###
######################

main_clr="yellow"
acc_clr="White"
bg_clr="orange"
dark="black"
light="colour37" # light gray?
terminal="colour235"

# loud or quiet?
set -g visual-activity off
set -g visual-bell on
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action current 

#  modes
#setw -g clock-mode-colour "fg=${acc_clr}"
setw -g mode-style "fg=colour1 bg=${bg_clr},bold"

# panes
set -g pane-border-style "fg=#{main_clr}, bg=#{terminal}"
set -g pane-active-border-style "fg=#{acc_clr}, bg=#{terminal}"
set -g window-style "bg=#{terminal}"

# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-style "bg=#{main_clr}, fg=#{acc_clr} dim"
set -g status-left '#[fg=#{dark}][#S]'
set -g status-right "#[fg=colour233,bg=#{main_clr}]#(/home/samkel/Automation/daylog/.venv/bin/python3.10 /home/samkel/Automation/daylog/daysum.py -x 2>&1 ) #[fg=#{light},bg=#{dark}] #(ping -c 1 inside >/dev/null && echo BENCH-NET || ip addr show | awk '/inet.*brd/{print \$NF; exit}') #[fg=#{dark},bg=#{main_clr}] %m/%d/%y #[fg=#{light},bg=#{dark}] %H:%M:%S "
set -g status-right-length 90
set -g status-left-length 20

setw -g window-status-current-style "fg=#{light}, bg=#{dark} bold"
setw -g window-status-current-format ' #I#[fg=#{light}]:#[fg=#{light}]#W#[fg=colour249]#F '

setw -g window-status-style "fg=colour0, bg=#{main_clr}"
setw -g window-status-format ' #I#[fg=colour237]:#[fg=#{dark}]#W#[fg=colour244]#F '

setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'

# messages
set -g message-style "fg=colour0 bg=#{acc_clr} bold"

# 256 color
set-option -sa terminal-features ",alacritty:RGB"
set -g default-terminal "xterm-256color"
